# -*- coding: utf-8 -*-
"""predicao_sementes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jlfQngYvYjadQQYQHsWMbHUQf2588PBs
"""

# Importação das bibliotecas
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import confusion_matrix, accuracy_score
from sklearn.ensemble import RandomForestClassifier
import seaborn as sns
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()
import io

df = pd.read_csv(io.BytesIO(uploaded['soybean.csv']))

df.head()

df.shape

previsoes = df.iloc[:,0:35].values
classe = df.iloc[:,35].values

# Transformação dos atributos categóricos em atributos numéricos, passando o índice de cada atributo categórico
lablencoder = LabelEncoder()

colunas = df.shape[1]
for i in range(0,df.shape[1]-1):
  previsoes[:,i] = lablencoder.fit_transform(previsoes[:,i])

# Divisão da base de dados entre treinamento e teste (30% para testar e 70% para treinar)
x_treinamento, x_teste, y_treinamento, y_teste = train_test_split(previsoes, classe, test_size=0.3, random_state=0)

# Criação do modelo, treinamento, obtenção das previsões e da taxa de acerto
modelo_floresta = RandomForestClassifier(n_estimators=100)
modelo_floresta.fit(x_treinamento, y_treinamento)

modelo_floresta.estimators_

previws = modelo_floresta.predict(x_teste)
confusao = confusion_matrix(y_teste, previws)
taxa_acerto = accuracy_score(y_teste, previws)
taxa_acerto

confusao
# Plotar a matriz de confusão como um gráfico de calor
plt.figure(figsize=(8, 6))
sns.heatmap(confusao, annot=True, cmap='Blues', fmt='g', cbar=False)

# Adicionar rótulos e título
plt.xlabel('Previsões')
plt.ylabel('Rótulos Verdadeiros')
plt.title('Matriz de Confusão')

# Exibir o gráfico
plt.show()

